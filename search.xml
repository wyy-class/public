<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>归并排序算法</title>
      <link href="/public/2020/07/09/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
      <url>/public/2020/07/09/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h3><p> 分治思想 归并思想</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">// 归并排序</span><br><span class="line">  public static int[] mergeSort(int[] array) &#123;</span><br><span class="line">    // 为了方便查看结果，我们将每个数组进行打印</span><br><span class="line">    <span class="keyword">if</span> (array.length == 1) &#123;</span><br><span class="line">      <span class="built_in">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int middle = array.length / 2;</span><br><span class="line">    // 处理 0 到 middle 左侧数组部分</span><br><span class="line">    int[] left = mergeSort(subArray(array, 0, middle));</span><br><span class="line">    // 处理 middle 到 array.length 右侧数组部分</span><br><span class="line">    int[] right = mergeSort(subArray(array, middle, array.length));</span><br><span class="line"></span><br><span class="line">    // TODO处理合并问题</span><br><span class="line">    p(array,left,right);</span><br><span class="line">    <span class="built_in">return</span> array;</span><br><span class="line">  &#125;</span><br><span class="line">  public static void p(int[] array,int[] left,int[] right)&#123;</span><br><span class="line">    int l=0;</span><br><span class="line">    int r=0;</span><br><span class="line">    int k=0;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;left.length&amp;&amp;r&lt;right.length)&#123;</span><br><span class="line">    <span class="keyword">if</span>(left[l]&lt;right[r])&#123;</span><br><span class="line">      array[k]=left[l];</span><br><span class="line">      l++;</span><br><span class="line">      k++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      array[k]=right[r];</span><br><span class="line">      r++;</span><br><span class="line">      k++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;left.length)&#123;</span><br><span class="line">       <span class="keyword">for</span>(int i=l;i&lt;left.length;i++)&#123;</span><br><span class="line">       array[k]=left[i];</span><br><span class="line">       k++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;right.length)&#123;</span><br><span class="line">      <span class="keyword">for</span>(int i=r;i&lt;right.length;i++)&#123;</span><br><span class="line">       array[k]=right[i];</span><br><span class="line">       k++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 拷贝原数组的部分内容，从 left 到 right</span><br><span class="line">  public static int[] subArray(int[] <span class="built_in">source</span>, int left, int right) &#123;</span><br><span class="line">    // 创建一个新数组</span><br><span class="line">    int[] result = new int[right - left];</span><br><span class="line">    // 依次赋值进去</span><br><span class="line">    <span class="keyword">for</span> (int i = left; i &lt; right; i++) &#123;</span><br><span class="line">      result[i - left] = <span class="built_in">source</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> result;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>快速排序算法</title>
      <link href="/public/2020/07/09/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/"/>
      <url>/public/2020/07/09/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h3><p> 分治思想 划分思想</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">public static void quickSort(int[] array) &#123;</span><br><span class="line">    // 调用快速排序的核心，传入left，right</span><br><span class="line">    quickSortCore(array, 0, array.length - 1);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 快速排序的核心，同样也是递归函数</span><br><span class="line">  public static void quickSortCore(int[] array, int left, int right) &#123;</span><br><span class="line">    // 递归基准条件，left &gt;= right 即表示数组只有1个或者0个元素。</span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">      <span class="built_in">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    // 根据轴分区</span><br><span class="line">    int pivotIndex = partition(array, left, right);</span><br><span class="line"></span><br><span class="line">    // 递归调用左侧和右侧数组分区</span><br><span class="line">    quickSortCore(array, left, pivotIndex - 1);</span><br><span class="line">    quickSortCore(array, pivotIndex + 1, right);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 对数组进行分区，并返回当前轴所在的位置</span><br><span class="line">  public static int partition(int[] array, int left, int right) &#123;</span><br><span class="line">    int temp=array[left];</span><br><span class="line">    int m=left;</span><br><span class="line">     left=left+1;</span><br><span class="line">     int t=0;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">      <span class="keyword">while</span>(array[left]&lt;=temp&amp;&amp;left&lt;right)&#123;</span><br><span class="line">        left++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span>(array[right]&gt;=temp&amp;&amp;left&lt;right)&#123;</span><br><span class="line">        right--;</span><br><span class="line">      &#125;</span><br><span class="line">      t=array[left];</span><br><span class="line">      array[left]=array[right];</span><br><span class="line">      array[right]=t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(array[left]&gt;temp)&#123;</span><br><span class="line">      left--;</span><br><span class="line">    &#125;</span><br><span class="line">    t=array[left];</span><br><span class="line">    array[left]=array[m];</span><br><span class="line">    array[m]=t;</span><br><span class="line">    <span class="built_in">return</span> left;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/public/2020/07/09/hello-world/"/>
      <url>/public/2020/07/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到<a href="https://github.com/wyy-class" target="_blank" rel="noopener">wyy</a>的博客，希望我们能够一起学习，一起进步，加油！</p><p>More info: <img src="http://image.baidu.com/search/detail?ct=503316480&z=undefined&tn=baiduimagedetail&ipn=d&word=%E6%AC%A2%E8%BF%8E%E5%85%89%E4%B8%B4&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=undefined&hd=undefined&latest=undefined&copyright=undefined&cs=2145487995,3918592888&os=1648436880,3907292794&simid=3475138804,306584137&pn=0&rn=1&di=66880&ln=1722&fr=&fmq=1594284688051_R&fm=&ic=undefined&s=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&is=0,0&istype=0&ist=&jit=&bdtype=0&spn=0&pi=0&gsm=0&objurl=http%3A%2F%2Fimg11.360buyimg.com%2Fn1%2Fjfs%2Ft22426%2F97%2F302475165%2F80608%2Fcd922a1d%2F5b0901a8N7dde8812.jpg&rpstart=0&rpnum=0&adpicid=0&force=undefined" alt=""></p><h3 id="欢迎光临寒舍"><a href="#欢迎光临寒舍" class="headerlink" title="欢迎光临寒舍"></a>欢迎光临寒舍</h3>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
